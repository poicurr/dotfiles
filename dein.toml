[[plugins]]
repo  = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
insert = 1
hook_add = '''
  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif
  let g:neocomplete#force_omni_input_patterns.c =
        \ '[^.[:digit:] *\t]\%(\.\|->\)\w*'
  let g:neocomplete#force_omni_input_patterns.cpp =
        \ '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'
'''

[[plugins]]
repo = 'justmao945/vim-clang'
filetypes  =  ['c', 'cpp']
hook_add = '''
  let g:clang_format_style = 'Google'
  let g:clang_format_auto = 1
  let g:clang_check_syntax_auto = 1
  let g:clang_c_options = '-std=c11'
  let g:clang_cpp_options = '-std=c++2a -Wno-pragma-once-outside-header'
  let g:clang_compilation_database = './build/'
  let g:clang_auto = 0
  let g:clang_c_completeopt = 'menuone'
  let g:clang_cpp_completeopt = 'menuone'
'''

[[plugins]]
repo = 'vim-scripts/a.vim'
on_ft = ['c', 'cpp']
hook_source = '''
  nmap <silent> <leader>aa :A<CR>
  nmap <silent> <leader>at :AT<CR>
  nmap <silent> <leader>av :AV<CR>
'''

[[plugins]]
repo = 'lyuts/vim-rtags'
on_ft = ['c', 'cpp']
hook_add = '''
  let g:rtagsUseDefaultMappings = 0
  let g:rtagsAutoLaunchRdm = 1
  noremap <F2> :call rtags#SymbolInfo()<CR>
  noremap <F3> :call rtags#JumpTo(g:SAME_WINDOW)<CR>
  noremap <F4> :call rtags#FindRefs()<CR>
  noremap <C-f> :<C-u>Unite<Space>rtags/references<CR>
  noremap <A-Up> :call rtags#JumpToParent()<CR>
  noremap <A-Left> :call rtags#JumpBack()<CR>
  noremap <C-A-r> :call rtags#RenameSymbolUnderCursor()<CR>
  noremap <C-r>J :call rtags#JumpTo(g:SAME_WINDOW, { '--declaration-only' : '' })<CR>
  noremap <C-r>S :call rtags#JumpTo(g:H_SPLIT)<CR>
  noremap <C-r>V :call rtags#JumpTo(g:V_SPLIT)<CR>
  noremap <C-r>T :call rtags#JumpTo(g:NEW_TAB)<CR>
  noremap <C-r>n :call rtags#FindRefsByName(input("Pattern? ", "", "customlist,rtags#CompleteSymbols"))<CR>
  noremap <C-r>s :call rtags#FindSymbols(input("Pattern? ", "", "customlist,rtags#CompleteSymbols"))<CR>
  noremap <C-r>r :call rtags#ReindexFile()<CR>
  noremap <C-r>l :call rtags#ProjectList()<CR>
  noremap <C-r>v :call rtags#FindVirtuals()<CR>
  noremap <C-r>C :call rtags#FindSuperClasses()<CR>
  noremap <C-r>c :call rtags#FindSubClasses()<CR>
  noremap <C-r>d :call rtags#Diagnostics()<CR>
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['roxma/nvim-yarp', 'roxma/vim-hug-neovim-rpc']
hook_add = '''
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
  imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
        \ "\<Plug>(neosnippet_expand_or_jump)"
        \: pumvisible() ? "\<C-n>" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
        \ "\<Plug>(neosnippet_expand_or_jump)"
        \: "\<TAB>"
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['neosnippet.vim']

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo    = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'tpope/vim-fugitive'

# Color Themes
[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'morhetz/gruvbox'

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

